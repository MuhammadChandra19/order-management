// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockOrderServiceInterface is a mock of OrderServiceInterface interface.
type MockOrderServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockOrderServiceInterfaceMockRecorder
}

// MockOrderServiceInterfaceMockRecorder is the mock recorder for MockOrderServiceInterface.
type MockOrderServiceInterfaceMockRecorder struct {
	mock *MockOrderServiceInterface
}

// NewMockOrderServiceInterface creates a new mock instance.
func NewMockOrderServiceInterface(ctrl *gomock.Controller) *MockOrderServiceInterface {
	mock := &MockOrderServiceInterface{ctrl: ctrl}
	mock.recorder = &MockOrderServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderServiceInterface) EXPECT() *MockOrderServiceInterfaceMockRecorder {
	return m.recorder
}

// GetOrderList mocks base method.
func (m *MockOrderServiceInterface) GetOrderList(c *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetOrderList", c)
}

// GetOrderList indicates an expected call of GetOrderList.
func (mr *MockOrderServiceInterfaceMockRecorder) GetOrderList(c interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrderList", reflect.TypeOf((*MockOrderServiceInterface)(nil).GetOrderList), c)
}
